[{"D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\index.js":"1","D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\App.js":"2","D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\reportWebVitals.js":"3","D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\components\\AskQuestion.js":"4","D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\components\\SubmitParagraph.js":"5","D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\components\\Paragraphs.js":"6","D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\components\\Questions.js":"7","D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\components\\QuestionComponent.js":"8"},{"size":500,"mtime":1610535851436,"results":"9","hashOfConfig":"10"},{"size":5389,"mtime":1611408089300,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610535851436,"results":"12","hashOfConfig":"10"},{"size":5553,"mtime":1611417252752,"results":"13","hashOfConfig":"10"},{"size":2414,"mtime":1611140845196,"results":"14","hashOfConfig":"10"},{"size":1191,"mtime":1611078954478,"results":"15","hashOfConfig":"10"},{"size":713,"mtime":1611416858530,"results":"16","hashOfConfig":"10"},{"size":2147,"mtime":1611417138282,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vtz3ib",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\index.js",[],["37","38"],"D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\App.js",[],"D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\reportWebVitals.js",[],"D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\components\\AskQuestion.js",["39","40","41","42","43"],"import React,{useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport { useAlert } from 'react-alert'\r\nimport * as qna from '@tensorflow-models/qna';\r\nimport * as tf from '@tensorflow/tfjs-core'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nvar model;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(4),\r\n        width: '100%',\r\n      },\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: \"0 auto\",\r\n            marginTop: \"10%\",\r\n          width: \"30%\",\r\n          height: \"30%\",\r\n        },\r\n        textAlign:\"center\"\r\n      },\r\n      loader:{\r\n        margin: \"0 auto\",\r\n        marginTop: \"10%\",\r\n        textAlign:\"center\"\r\n      },\r\n      loader2:{\r\n        margin: \"0 auto\",\r\n        textAlign:\"center\",\r\n        marginTop: \"10px\",\r\n      },\r\n      paper1: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: \"0 auto\",\r\n            marginTop: \"20px\",\r\n          width: \"30%\",\r\n          height: \"30%\",\r\n        },\r\n        textAlign:\"center\"\r\n      },\r\n      paddingPaper:{\r\n          padding:\"20px\"\r\n      }\r\n  }));\r\n\r\n\r\nexport default function AskQuestion(props){\r\n\r\n    const [state,setState] = React.useState({}) \r\n    // const [loading,setLoading] = React.useState(true)\r\n    const [answer,setAnswer] = React.useState(\"\")\r\n    const [satisfied,setSatisfied] = React.useState(false)\r\n    const [answerLoading,setAnswerLoading] = React.useState(false)\r\n    const classes = useStyles()\r\n    const alert = useAlert()\r\n\r\n    // useEffect(()=>{\r\n    //   tf.setBackend('webgl')\r\n    //   qna.load().then(models => {\r\n    //     setLoading(false)\r\n    // model=models\r\n    //   })\r\n    // },[])\r\n    \r\n    const getAnswers=(paragraph,question)=>{\r\n      props.model.findAnswers(question, paragraph).then(answers => {\r\n        if(answers.length==0){\r\n          setSatisfied(false)\r\n          setAnswer(\"No Answer\")\r\n          setAnswerLoading(false)\r\n        }\r\n        else{\r\n          setSatisfied(true)\r\n          setAnswer(answers[0].text)\r\n          setAnswerLoading(false)\r\n        }\r\n       \r\n      });\r\n    }\r\n\r\n    const handleSatisfied=()=>{\r\n      axios.post('http://localhost:5000/savequestion',{\r\n        question:[state.question.toLowerCase()],\r\n        answer:answer\r\n      })\r\n      .then(function (response){\r\n        setState({...state,question:\"\"})\r\n      })\r\n      setSatisfied(false)\r\n    }\r\n\r\n    const handleChange=(e)=>{\r\n        setState({...state,[e.target.name]:e.target.value})\r\n        setAnswer(\"\")\r\n        }\r\n\r\n    const handleSubmit=()=>{\r\n      setAnswerLoading(true)\r\n      axios.post('http://localhost:5000/checkquestion',{\r\n        question:state.question\r\n    })\r\n    .then(function (response){\r\n      if(response.data.answer){\r\n        setAnswer(response.data.answer)\r\n        setAnswerLoading(false)\r\n      }\r\n      else{\r\n        askQuestion()\r\n      }\r\n    })\r\n    }\r\n\r\n    const askQuestion=()=>{\r\n        if(state.question){\r\n            axios.post('http://localhost:5000/askquestion',{\r\n                question:state.question\r\n            })\r\n            .then(function (response) {\r\n              // handle success\r\n              var question = state.question\r\n              var paragraph = response.data.paragraph\r\n              getAnswers(paragraph,question)  \r\n            })\r\n            .catch(function (error) {\r\n              // handle error\r\n              console.log(error);\r\n            })\r\n            .then(function () {\r\n              // always executed\r\n            });\r\n          }\r\n          else{\r\n            alert.show(\"Please Enter a Question\",{\r\n              closeCopy:\"OK\"\r\n            })\r\n          }\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        {props.loading ? <div className={classes.loader}>\r\n          <CircularProgress/>\r\n          <Typography variant=\"h4\">Loading Model..</Typography>\r\n          </div> :\r\n        <div>\r\n        <div className={classes.paper}>\r\n             <Paper elevation={3} className={classes.paddingPaper}>\r\n             <Typography variant=\"h4\">Ask Question</Typography>\r\n             <div className={classes.input}>\r\n      <TextField value={state.question} id=\"outlined-basic\" label=\"Enter Question\" variant=\"outlined\" name=\"question\" onChange={handleChange}/>\r\n      <Button style={{marginTop:\"10px\"}} fullWidth variant=\"contained\" onClick={handleSubmit} color=\"primary\">Submit</Button>\r\n    </div>\r\n             </Paper>\r\n\r\n            \r\n        </div>\r\n        {answerLoading && <div className={classes.loader2}><Typography variant=\"h6\">Predicting Answer..</Typography></div>}\r\n        <div className={classes.paper1}>\r\n        {answer !==\"\" && <Paper elevation={3}>\r\n         {answer!==\"No Answer\" ? <p style={{fontSize:\"20px\"}}><b>Answer: </b>{answer}</p> :\r\n         <p style={{fontSize:\"20px\"}}><b>No Answer</b></p>}\r\n         {satisfied && <div>\r\n         <p>Are You Satisfied with the answer?</p>\r\n         <Button style={{margin:\"10px\"}} variant=\"contained\" color=\"primary\" onClick={handleSatisfied}>Yes</Button>\r\n         <Button variant=\"contained\" color=\"primary\" onClick={()=>setSatisfied(false)}>No</Button>\r\n         </div>}\r\n         </Paper>}\r\n         </div>\r\n        </div>\r\n        }\r\n        </div>\r\n    )\r\n}","D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\components\\SubmitParagraph.js",["44"],"import React,{useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport { useAlert } from 'react-alert'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(4),\r\n        width: '100%',\r\n      },\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: \"0 auto\",\r\n            marginTop: \"10%\",\r\n          width: \"30%\",\r\n          height: \"30%\",\r\n        },\r\n        textAlign:\"center\"\r\n      },\r\n      paddingPaper:{\r\n          padding: \"20px\"\r\n      }\r\n  }));\r\n\r\nexport default function SubmitParagraph(){\r\n\r\nconst [state,setState] = React.useState({}) \r\nconst classes = useStyles()\r\nconst alert = useAlert()\r\n\r\nconst handleChange=(e)=>{\r\nsetState({...state,[e.target.name]:e.target.value})\r\n}\r\n\r\n\r\n\r\nconst handleSubmit=()=>{\r\n  if(state.paragraph && state.title){\r\n    axios.post('http://localhost:5000/submitparagraph',{\r\n        paragraph:state.paragraph,\r\n        title:state.title\r\n    })\r\n    .then(function (response) {\r\n      // handle success\r\n      alert.show(\"Paragraph Submitted\")\r\n      setState({...state,paragraph:\"\",title:\"\"})\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    })\r\n    .then(function () {\r\n      // always executed\r\n    });\r\n  }\r\n  else{\r\n    alert.show(\"Please Fill All Fields.\",{\r\n      closeCopy:\"OK\"\r\n    })\r\n  }\r\n}\r\n\r\n    return(\r\n        <div className={classes.paper}>\r\n            <Paper elevation={3} className={classes.paddingPaper}>\r\n                <Typography variant=\"h4\">Submit Paragraph</Typography>\r\n                   <div className={classes.input}>\r\n      <TextField value={state.title} id=\"outlined-basic\" label=\"Enter Title\" variant=\"outlined\" name=\"title\" onChange={handleChange}/>\r\n    </div>\r\n    <div className={classes.input}>\r\n    <TextField value={state.paragraph} rows={15} multiline={true} id=\"outlined-basic\" label=\"Enter Paragraph\" name=\"paragraph\" variant=\"outlined\" onChange={handleChange}/>\r\n    </div>\r\n    <Button style={{marginTop:\"10px\"}} fullWidth variant=\"contained\" onClick={handleSubmit} color=\"primary\">Submit</Button>\r\n    </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\components\\Paragraphs.js",[],"D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\components\\Questions.js",[],"D:\\Fiverr\\dmcswain\\Question AI Demo\\webapp\\src\\components\\QuestionComponent.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":15,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},{"ruleId":"49","severity":1,"message":"53","line":8,"column":13,"nodeType":"51","messageId":"52","endLine":8,"endColumn":16},{"ruleId":"49","severity":1,"message":"54","line":9,"column":13,"nodeType":"51","messageId":"52","endLine":9,"endColumn":15},{"ruleId":"49","severity":1,"message":"55","line":13,"column":5,"nodeType":"51","messageId":"52","endLine":13,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":80,"column":26,"nodeType":"58","messageId":"59","endLine":80,"endColumn":28},{"ruleId":"49","severity":1,"message":"50","line":1,"column":15,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'qna' is defined but never used.","'tf' is defined but never used.","'model' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]